services:
  db:
    image: postgres:latest
    container_name: portfolio_db
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - portfolio_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: portfolio_api:latest
    container_name: portfolio_api
    ports:
      - "8080:8080"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SSL: ${DB_SSL}
      #Redis Envrionment Variables
      REDIS_ADDR: ${REDIS_ADDR}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - portfolio_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
  
  redis:
    image: redis:latest
    container_name: portfolio_redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      -  portfolio_network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "INFO"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

    

networks:
  portfolio_network:
    external: true

volumes:
  pgdata:
    external: true

